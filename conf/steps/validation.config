/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    // Configuration for the validation step
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:.*' {
        publishDir = [
            path: { "${params.outdir}/validation/truth" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: false
        ]
    }
    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:BCFTOOLS_MPILEUP' {
        ext.args = [
            "-I",
            "-E",
            "-a 'FORMAT/DP'"
        ].join(' ')
        ext.args2 = [
            "-Aim",
            "-C alleles"
        ].join(' ')
        ext.prefix = { "${meta.id}_R${meta.region.replace(':','_')}_truth.call" }
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:BCFTOOLS_ANNOTATE' {
        ext.args     = "--set-id '%CHROM:%POS:%REF:%ALT' -Oz"
        ext.prefix = { "${meta.id}_R${meta.region.replace(':','_')}.annotate" }
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:BCFTOOLS_INDEX' {
        ext.args     = "--tbi"
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_TRUTH:.*' {
        publishDir = [
            path: { "${params.outdir}/validation/concat" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = { "${meta.id}_truth_concat" }
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_TRUTH:BCFTOOLS_CONCAT' {
        ext.args = {[
            "--ligate",
            "--output-type z",
        ].join(" ").trim()}
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_TRUTH:BCFTOOLS_INDEX' {
        ext.args     = "--tbi"
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:.*' {
        publishDir = [
            path: { "${params.outdir}/validation/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:GLIMPSE2_CONCORDANCE' {
        ext.prefix = { "${meta.id}.concordance" }
        ext.args = "--out-r2-per-site"
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:CONCATENATE' {
        ext.suffix = { "txt" }
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:GUNZIP' {
        publishDir = [ enabled: false ]
    }

    withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:ADD_COLUMNS' {
        ext.prefix = { "${meta.id}_D${meta.depth}_P${meta.panel}_SNP" }
        publishDir = [ enabled: false ]
    }
}
