nextflow_workflow {

    name "Test Subworkflow VCF_CHR_CHECK"
    script "../main.nf"

    workflow "VCF_CHR_CHECK"

    tag "subworkflows"
    tag "subworkflows_local"
    tag "subworkflows/vcf_chr_check"
    tag "vcf_chr_check"

    tag "bcftools"
    tag "bcftools/annotate"
    tag "bcftools/index"
    tag "faitochr"

    test("Should run without error") {
        config "./nextflow_rename.config"
        when {
            workflow {
                """
                fai_file = Channel.of('22\t10000\t7\t60\t61', '21\t10000\t7\t60\t61').collectFile(name: '21_22.fai', newLine: true)
                input[0] = Channel.fromList([
                    [
                        [id: "chr22"],
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/genome/vcf/dbsnp_146.hg38.vcf.gz",checkIfExist:true),
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/genome/vcf/dbsnp_146.hg38.vcf.gz.tbi",checkIfExist:true)
                    ],
                    [
                        [id: "chr21"],
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/illumina/vcf/chr21/simulated_sv.vcf.gz",checkIfExist:true),
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/illumina/vcf/chr21/simulated_sv.vcf.gz.tbi",checkIfExist:true)
                    ]
                ])
                input[1] = Channel.of([[id:"GRCh37"],[]])
                    .combine(fai_file)
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(workflow.out).match() }
            )
        }
    }
    test("Should run with error due to missing renaming params") {
        config "./nextflow.config"
        when {
            workflow {
                """
                input[0] = Channel.fromList([
                    [
                        [id: "multi"],
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/illumina/vcf/test.rnaseq.vcf.gz",checkIfExist:true),
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/illumina/vcf/test.rnaseq.vcf.gz.tbi",checkIfExist:true)
                    ],
                    [
                        [id: "chr21"],
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/illumina/vcf/chr21/simulated_sv.vcf.gz",checkIfExist:true),
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/illumina/vcf/chr21/simulated_sv.vcf.gz.tbi",checkIfExist:true)
                    ]
                ])
                input[1] = Channel.of([
                    [id:"GRCh37"],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/genome/genome.fasta",checkIfExist:true),
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/genome/genome.fasta.fai",checkIfExist:true)
                ])
                """
            }
        }

        then {
            assertAll(
                { assert workflow.failed },
                { assert workflow.errorReport.contains("Some contig names in the VCF do not match the reference genome. Please set `rename_chr` to `true` to rename the contigs.")}
            )
        }
    }
    test("Should run with error after renaming"){
        config "./nextflow_rename.config"
        when {
            workflow {
                """
                input[0] = Channel.fromList([
                    [
                        [id: "multi"],
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/illumina/vcf/NA24385_sv.vcf.gz",checkIfExist:true),
                        file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/illumina/vcf/NA24385_sv.vcf.gz.tbi",checkIfExist:true)
                    ]
                ]) // Error due to multiple contigs name in header not present in fasta file
                input[1] = Channel.of([
                    [id:"GRCh37"],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/genome/genome.fasta",checkIfExist:true),
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/homo_sapiens/genome/genome.fasta.fai",checkIfExist:true)
                ])
                """
            }
        }

        then {
            assertAll(
                { assert workflow.failed },
                { assert workflow.errorReport.contains("Even after renaming errors are still present. Please check that contigs name in vcf and fasta file are equivalent.")}
            )
        }
    }
}
